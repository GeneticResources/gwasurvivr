% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sangerCoxSurv.R
\name{sangerCoxSurv}
\alias{sangerCoxSurv}
\title{Fit cox survival to all variants in a .vcf.gz file from Sanger imputation server}
\usage{
sangerCoxSurv(vcf.file, covariate.file, id.column, sample.ids = NULL,
  time.to.event, event, covariates, inter.term = NULL, print.covs = "only",
  out.file, maf.filter = 0.05, info.filter = NULL, chunk.size = 5000,
  verbose = TRUE, clusterObj = NULL)
}
\arguments{
\item{vcf.file}{character(1) path to VCF file.}

\item{sample.ids}{character vector with sample ids to include in analysis}

\item{time.to.event}{character(1) string that matches time column name in pheno.file}

\item{event}{character(1) string that matches event column name in pheno.file}

\item{covariates}{character vector with matching column names in pheno.file of covariates of interest}

\item{inter.term}{character(1) string giving the column name of the covariate that will be added to the interaction term with SNP (e.g. term*SNP). See details.}

\item{print.covs}{character(1) string of either `"only"`, `"all"` or `"some"`, defining which covariate statistics should be printed to the output. See details.}

\item{out.file}{character(1) string with output name}

\item{maf.filter}{integer(1) filter out minor allele frequency below threshold (i.e. 0.005 will filter MAF > 0.005)}

\item{info.filter}{integer(1) of imputation quality score filter (i.e. 0.7 will filter info > 0.7)}

\item{chunk.size}{integer(1) number of variants to process per thread}

\item{verbose}{logical(1) for messages that describe which part of the analysis is currently being run}

\item{clusterObj}{A cluster object that can be used with the `parApply` function. See details.}

\item{pheno.file}{matrix(1) comprising phenotype data.}
}
\value{
Saves text file directly to disk that contains survival analysis results
}
\description{
Performs survival analysis using Cox proportional hazard models on imputed genetic data stored in compressed VCF files
}
\details{
**Testing for SNP-covariate interactions:**
User can define the column name of the covariate that will be included in the interaction term. 
For example, for given covariates `a` and `b`, where `c` is defined as the `inter.term` the model will be:
`~ a + b + c + SNP + c*SNP`.

**Printing results of other covariates**
`print.covs` argument controls the number of covariates will be printed as output. The function is set to `only`
by default and will only print the SNP or if an interaction term is given, the results of the interaction 
term (e.g. `SNP*covariate`). Whereas,  `all` will print results (coef, se.coef, p.value etc) of all covariates 
included in the model. `some` is only applicable if an interaction term is given and will print the results for SNP, 
covarite tested for interaction and the interaction term. User should be mindful about using the `all` option, as
it will likely slow down the analysis and will increase the output file size. 

**User defined parallelization**
This function uses `parApply` from `parallel` package to fit models to SNPs in parallel. User is not required to set any options for the parallelization. 
However, advanced users who wish to optimize the parallelization, can provide a cluster object generated by `makeCluster` family of functions that suits their need and platform.
}
\examples{
vcf.file <- system.file(package="gwasurvivr","extdata", "sanger.pbwt_reference_impute.vcf.gz")
pheno.fl <- system.file(package="gwasurvivr", "extdata", "simulated_pheno.txt")
pheno.file <- read.table(pheno.fl, sep=" ", header=TRUE, stringsAsFactors = FALSE)
library(tidyverse)
library(magrittr)
pheno.file <- pheno.file \%>\%  
                    mutate(SexFemale=case_when(
                                      sex=="female"~1L,
                                      sex=="male"~0L)
                          ) \%>\% 
                    select(-ID_1)
sample.ids <- pheno.file \%>\%
                    filter(group=="experimental") \%$\%
                    ID_2 
sangerCoxSurv(vcf.file=vcf.file,
              pheno.file=pheno.file,
              time.to.event="time",
              event="event",
              covariates=c("age", "SexFemale", "bmiOVWT"),
              sample.ids=sample.ids,
              out.file="sanger_example",
              chunk.size=10000,
              info.filter=0.7,
              maf.filter=0.005,
              verbose=TRUE)

}
